from __future__ import annotations

import os
from typing import Optional

import uvicorn
from fastapi import FastAPI, Request


app = FastAPI(title="VoiceBot OAuth Server")


@app.get("/spotify/callback")
async def spotify_callback(request: Request):
    """–û–±—Ä–æ–±–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤—ñ–¥ Spotify OAuth.
    –ü—Ä–∏–π–º–∞—î–º–æ ?code=...&state=... —ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–æ—Ä–æ—Ç–∫—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å.
    """
    params = dict(request.query_params)
    code: Optional[str] = params.get("code")
    state: Optional[str] = params.get("state")
    # TODO: –æ–±–º—ñ–Ω—è—Ç–∏ code –Ω–∞ —Ç–æ–∫–µ–Ω–∏, –∑–±–µ—Ä–µ–≥—Ç–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ state (telegram_user_id)
    return {"status": "ok", "provider": "spotify", "received_code": bool(code), "state": state}


@app.get("/google/callback")
async def google_callback(request: Request):
    """–û–±—Ä–æ–±–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤—ñ–¥ Google OAuth.
    –ü—Ä–∏–π–º–∞—î–º–æ ?code=...&state=... —ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–æ—Ä–æ—Ç–∫—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å.
    """
    params = dict(request.query_params)
    code: Optional[str] = params.get("code")
    state: Optional[str] = params.get("state")
    # TODO: –æ–±–º—ñ–Ω—è—Ç–∏ code –Ω–∞ —Ç–æ–∫–µ–Ω–∏, –∑–±–µ—Ä–µ–≥—Ç–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ state (telegram_user_id)
    return {"status": "ok", "provider": "google", "received_code": bool(code), "state": state}


def run_server() -> None:
    """–ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞.

    –ü–æ–≤–µ–¥—ñ–Ω–∫–∞:
    - –Ø–∫—â–æ OAUTH_SERVER_HTTP=1 ‚Üí –∑–∞–ø—É—Å–∫ –±–µ–∑ SSL –Ω–∞ –ø–æ—Ä—Ç—ñ 8000.
    - –Ü–Ω–∞–∫—à–µ –Ω–∞–º–∞–≥–∞—î–º–æ—Å—å SSL –Ω–∞ 8443; –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ –¥–æ—Å—Ç—É–ø—É/–∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ñ–æ–ª–±–µ–∫ –Ω–∞ HTTP:8000.
    """
    force_http = os.getenv("OAUTH_SERVER_HTTP", "0") == "1"

    def run_http() -> None:
        print("üåê OAuth —Å–µ—Ä–≤–µ—Ä (HTTP) ‚Üí http://0.0.0.0:8000")
        uvicorn.run(
            app,
            host="0.0.0.0",
            port=8000,
            log_level="info",
        )

    if force_http:
        run_http()
        return

    ssl_cert = "/etc/letsencrypt/live/voicebot.laztsoft.pl/fullchain.pem"
    ssl_key = "/etc/letsencrypt/live/voicebot.laztsoft.pl/privkey.pem"

    if not (os.path.exists(ssl_cert) and os.path.exists(ssl_key)):
        print("‚ùå SSL —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ! –û—á—ñ–∫—É—î—Ç—å—Å—è Let's Encrypt —É /etc/letsencrypt/live/voicebot.laztsoft.pl/")
        print("‚û°Ô∏è  –§–æ–ª–±–µ–∫ –Ω–∞ HTTP –±–µ–∑ SSL (–ø–æ—Ä—Ç 8000)")
        run_http()
        return

    try:
        print("‚úÖ –°–µ—Ä–≤–µ—Ä (HTTPS) ‚Üí https://voicebot.laztsoft.pl")
        uvicorn.run(
            app,
            host="0.0.0.0",
            port=8443,
            ssl_keyfile=ssl_key,
            ssl_certfile=ssl_cert,
            log_level="info",
        )
    except PermissionError:
        print("‚ùå –ù–µ–º–∞—î –ø—Ä–∞–≤ —á–∏—Ç–∞–Ω–Ω—è SSL –∫–ª—é—á—ñ–≤. –î–æ–¥–∞—î–º–æ —Ñ–æ–ª–±–µ–∫ –Ω–∞ HTTP (–ø–æ—Ä—Ç 8000).")
        print("‚ÑπÔ∏è  –†—ñ—à–µ–Ω–Ω—è: –¥–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ –≥—Ä—É–ø–∏ ssl-cert –∞–±–æ –ø—Ä–æ–∫—Å—É–≤–∞—Ç–∏ —á–µ—Ä–µ–∑ Nginx.")
        run_http()
    except Exception as exc:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É HTTPS: {exc}. –§–æ–ª–±–µ–∫ –Ω–∞ HTTP (–ø–æ—Ä—Ç 8000).")
        run_http()


