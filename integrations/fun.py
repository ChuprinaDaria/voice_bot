"""
–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ API –¥–ª—è –∂–∞—Ä—Ç—ñ–≤ —Ç–∞ —Ü—ñ–∫–∞–≤–∏—Ö —Ñ–∞–∫—Ç—ñ–≤
"""

from typing import Tuple
import requests
import random


class FunManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –∂–∞—Ä—Ç—ñ–≤ —Ç–∞ —Ü—ñ–∫–∞–≤–∏—Ö —Ñ–∞–∫—Ç—ñ–≤"""

    def __init__(self):
        self.joke_api = "https://official-joke-api.appspot.com/random_joke"
        self.fact_api = "https://uselessfacts.jsph.pl/random.json?language=en"
        
        # –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –∂–∞—Ä—Ç–∏ (fallback —è–∫—â–æ API –Ω–µ –ø—Ä–∞—Ü—é—î)
        # –ë—Ä–∏—Ç–∞–Ω—Å—å–∫–∏–π —Å—Ç–∏–ª—å: —Å–∞–º–æ—ñ—Ä–æ–Ω—ñ—è, –∞–±—Å—É—Ä–¥, understatement
        self.ukrainian_jokes = [
            "–ú—ñ–π –¥—ñ–¥—É—Å—å –ø—Ä–æ–∂–∏–≤ 103 —Ä–æ–∫–∏. –°–µ–∫—Ä–µ—Ç –¥–æ–≤–≥–æ–ª—ñ—Ç—Ç—è? –í—ñ–Ω –Ω—ñ–∫–æ–ª–∏ –Ω–µ —Å–ø–µ—Ä–µ—á–∞–≤—Å—è –∑ –±–∞–±—É—Å–µ—é. –ù–∞–≤—ñ—Ç—å –∫–æ–ª–∏ –≤–æ–Ω–∞ –±—É–ª–∞ –Ω–µ–ø—Ä–∞–≤–∞. –û—Å–æ–±–ª–∏–≤–æ –∫–æ–ª–∏ –≤–æ–Ω–∞ –±—É–ª–∞ –Ω–µ–ø—Ä–∞–≤–∞.",
            "–Ø –Ω–µ –∫–∞–∂—É, —â–æ –º—ñ–π –∫—ñ—Ç –º–µ–Ω–µ —ñ–≥–Ω–æ—Ä—É—î, –∞–ª–µ –∫–æ–ª–∏ —è –ø—Ä–∏–π—à–æ–≤ –¥–æ–¥–æ–º—É –ø—ñ—Å–ª—è –≤—ñ–¥–ø—É—Å—Ç–∫–∏, –≤—ñ–Ω –ø–æ–¥–∏–≤–∏–≤—Å—è –Ω–∞ –º–µ–Ω–µ —ñ –∑—ñ—Ç—Ö–Ω—É–≤ —Ç–∞–∫, –Ω—ñ–±–∏ —è –∑—ñ–ø—Å—É–≤–∞–≤ –π–æ–º—É –¥–µ–Ω—å.",
            "–ü—ñ—à–æ–≤ –¥–æ –ª—ñ–∫–∞—Ä—è. –í—ñ–Ω –∫–∞–∂–µ: '–í–∞–º —Ç—Ä–µ–±–∞ –±—ñ–ª—å—à–µ –≤—ñ–¥–ø–æ—á–∏–≤–∞—Ç–∏.' –Ø –∫–∞–∂—É: '–î–æ–±—Ä–µ.' –í—ñ–Ω: '–Ü –º–µ–Ω—à–µ —Ö–≤–∏–ª—é–≤–∞—Ç–∏—Å—å.' –Ø: '–ê —è–∫?' –í—ñ–Ω: '–¶–µ –Ω–µ –º–æ—è –ø—Ä–æ–±–ª–µ–º–∞, —è –∂ –ª—ñ–∫–∞—Ä, –∞ –Ω–µ —á–∞—Ä—ñ–≤–Ω–∏–∫.'",
            "–ú–æ—è –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Ç–æ–º—É, —â–æ –º—ñ–∂ '–ó–∞—Ä–∞–∑ —Ü–µ –∑—Ä–æ–±–ª—é' —ñ '–í–∂–µ –∑—Ä–æ–±–∏–≤' —É –º–µ–Ω–µ —î —Å—Ç–∞–¥—ñ—è '–•–º, –º–æ–∂–µ —á–∞—é –≤–∏–ø–∏—Ç–∏?', —è–∫–∞ —è–∫–∏–º–æ—Å—å —á–∏–Ω–æ–º –∑–∞–π–º–∞—î 4 –≥–æ–¥–∏–Ω–∏.",
            "–ó–∞–ø–∏—Ç—É—é—Ç—å —É –ø–∏—Å—å–º–µ–Ω–Ω–∏–∫–∞: '–Ø–∫ –≤–∏ –ø–∏—à–µ—Ç–µ —Ç–∞–∫—ñ –∑–∞—Ö–æ–ø–ª–∏–≤—ñ –¥–µ—Ç–µ–∫—Ç–∏–≤–∏?' - '–¢–∞ —è –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—Å—É—é, —è–∫ –Ω–∞–º–∞–≥–∞—é—Å—å –∑–Ω–∞–π—Ç–∏ –ø—É–ª—å—Ç –≤—ñ–¥ —Ç–µ–ª–µ–≤—ñ–∑–æ—Ä–∞.'",
            "–Ø –± –æ—Ä–≥–∞–Ω—ñ–∑—É–≤–∞–≤ —Å–≤–æ—î –∂–∏—Ç—Ç—è, –∞–ª–µ –∫–æ–∂–µ–Ω —Ä–∞–∑, –∫–æ–ª–∏ –ø–æ—á–∏–Ω–∞—é, –º–µ–Ω—ñ —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —á–∏ —Å–ø—Ä–∞–≤–¥—ñ –ø—ñ–Ω–≥–≤—ñ–Ω–∏ –º–∞—é—Ç—å –∫–æ–ª—ñ–Ω–∞. –ú–∞—é—Ç—å, –¥–æ —Ä–µ—á—ñ.",
            "–ú—ñ–π —Ä—ñ–≤–µ–Ω—å –º–æ—Ç–∏–≤–∞—Ü—ñ—ó —Å—å–æ–≥–æ–¥–Ω—ñ –º–æ–∂–Ω–∞ –æ–ø–∏—Å–∞—Ç–∏ —è–∫ '–•–æ—Ç—ñ–≤ –±–∏ —è —Ö–æ—Ç—ñ—Ç–∏ —â–æ—Å—å —Ä–æ–±–∏—Ç–∏'.",
            "–Ø –Ω–µ –ª—ñ–Ω–∏—é—Å—å. –Ø –ø—Ä–æ—Å—Ç–æ –≤ —Ä–µ–∂–∏–º—ñ –µ–Ω–µ—Ä–≥–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è. –ü–æ—Å—Ç—ñ–π–Ω–æ.",
        ]
        
        self.ukrainian_facts = [
            "üí° –ù–∞–π–¥–æ–≤—à–∞ –∫–Ω–∏–≥–∞ —É —Å–≤—ñ—Ç—ñ ‚Äî '–£ –ø–æ—à—É–∫–∞—Ö –≤—Ç—Ä–∞—á–µ–Ω–æ–≥–æ —á–∞—Å—É' –ú–∞—Ä—Å–µ–ª—è –ü—Ä—É—Å—Ç–∞. 9 609 000 —Å–ª—ñ–≤. –Ü–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –±–µ–∑—Å–æ–Ω–Ω—è!",
            "üí° –û—Å—å–º–∏–Ω–æ–≥–∏ –º–∞—é—Ç—å —Ç—Ä–∏ —Å–µ—Ä—Ü—è —ñ —Å–∏–Ω—ñ –∫—Ä–æ–≤. –î–≤–∞ —Å–µ—Ä—Ü—è –∫–∞—á–∞—é—Ç—å –∫—Ä–æ–≤ —á–µ—Ä–µ–∑ –∑—è–±—Ä–∞, —Ç—Ä–µ—Ç—î ‚Äî –ø–æ –≤—Å—å–æ–º—É —Ç—ñ–ª—É.",
            "üí° –ï–π—Ñ–µ–ª–µ–≤–∞ –≤–µ–∂–∞ –≤–ª—ñ—Ç–∫—É –≤–∏—â–∞ –Ω–∞ 15 —Å–º —á–µ—Ä–µ–∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –º–µ—Ç–∞–ª—É –≤—ñ–¥ —Å–ø–µ–∫–∏. –§—ñ–∑–∏–∫–∞, –∑–Ω–∞—î—Ç–µ.",
            "üí° –©–∞—Å—Ç—è –º–∞—î –∑–∞–ø–∞—Ö. –ù–∞—É–∫–æ–≤—Ü—ñ –≤–∏—è–≤–∏–ª–∏, —â–æ —â–∞—Å–ª–∏–≤—ñ –ª—é–¥–∏ –≤–∏–¥—ñ–ª—è—é—Ç—å –æ—Å–æ–±–ª–∏–≤—ñ —Ñ–µ—Ä–æ–º–æ–Ω–∏, —è–∫—ñ –º–æ–∂—É—Ç—å –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –Ω–∞—Å—Ç—Ä—ñ–π –æ—Ç–æ—á—É—é—á–∏–º.",
            "üí° –£ –ø—Ä–æ—Å—Ç–æ—Ä—ñ –ø–∞–Ω—É—î –ø–æ–≤–Ω–∞ —Ç–∏—à–∞. –ó–≤—É–∫–æ–≤—ñ —Ö–≤–∏–ª—ñ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –¥–ª—è –ø–æ—à–∏—Ä–µ–Ω–Ω—è, –∞ —É –≤–∞–∫—É—É–º—ñ –π–æ–≥–æ –Ω–µ–º–∞—î.",
            "üí° –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –ö–æ–Ω–≥—Ä–µ—Å—É –°–®–ê –∑–±–µ—Ä—ñ–≥–∞—î 38 –º—ñ–ª—å–π–æ–Ω—ñ–≤ –∫–Ω–∏–≥. –Ø–∫–±–∏ –≤–∏ —á–∏—Ç–∞–ª–∏ –æ–¥–Ω—É –∫–Ω–∏–≥—É –Ω–∞ –¥–µ–Ω—å, –≤–∞–º –∑–Ω–∞–¥–æ–±–∏–ª–æ—Å—è –± 104 000 —Ä–æ–∫—ñ–≤.",
            "üí° –ú–µ–¥ ‚Äî —î–¥–∏–Ω–∞ —ó–∂–∞, —è–∫–∞ –Ω—ñ–∫–æ–ª–∏ –Ω–µ –ø—Å—É—î—Ç—å—Å—è. –ê—Ä—Ö–µ–æ–ª–æ–≥–∏ –∑–Ω–∞—Ö–æ–¥–∏–ª–∏ –≥–æ—Ä—â–∏–∫–∏ –∑ –º–µ–¥–æ–º —É –≥—Ä–æ–±–Ω–∏—Ü—è—Ö —Ñ–∞—Ä–∞–æ–Ω—ñ–≤, —ñ –≤—ñ–Ω –±—É–≤ —Ü—ñ–ª–∫–æ–º –ø—Ä–∏–¥–∞—Ç–Ω–∏–π –¥–æ –≤–∂–∏–≤–∞–Ω–Ω—è.",
            "üí° –§—ñ–Ω–ª—è–Ω–¥—ñ—è ‚Äî –Ω–∞–π—â–∞—Å–ª–∏–≤—ñ—à–∞ –∫—Ä–∞—ó–Ω–∞ —Å–≤—ñ—Ç—É –∑–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–º –û–û–ù. –ú–æ–∂–ª–∏–≤–æ, —Å–µ–∫—Ä–µ—Ç —É —Å–∞—É–Ω—ñ —Ç–∞ —Å–ø–æ–∫–æ—ó?",
        ]

    def get_joke(self, language: str = "uk") -> Tuple[bool, str]:
        """
        –û—Ç—Ä–∏–º—É—î –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –∂–∞—Ä—Ç
        
        Args:
            language: uk, en, de
        """
        if language == "uk":
            joke = random.choice(self.ukrainian_jokes)
            return True, f"üòÑ {joke}"
        
        try:
            response = requests.get(self.joke_api, timeout=5)
            response.raise_for_status()
            data = response.json()
            
            setup = data.get('setup', '')
            punchline = data.get('punchline', '')
            
            return True, f"üòÑ {setup}\n\n...{punchline}"
                
        except Exception as e:
            print(f"‚ö†Ô∏è Joke API error: {e}")
            if language == "uk":
                joke = random.choice(self.ukrainian_jokes)
                return True, f"üòÑ {joke}"
            elif language == "de":
                return False, "‚ùå Fehler beim Abrufen des Witzes"
            else:
                return False, "‚ùå Error fetching joke"

    def get_fact(self, language: str = "uk") -> Tuple[bool, str]:
        """
        –û—Ç—Ä–∏–º—É—î –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ü—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç
        
        Args:
            language: uk, en, de
        """
        if language == "uk":
            fact = random.choice(self.ukrainian_facts)
            return True, fact
        
        try:
            response = requests.get(self.fact_api, timeout=5)
            response.raise_for_status()
            data = response.json()
            
            fact_text = data.get('text', '')
            
            if not fact_text:
                raise ValueError("Empty fact")
            
            if language == "de":
                prefix = "üí°"
            else:  # en
                prefix = "üí°"
            
            return True, f"{prefix} {fact_text}"
                
        except Exception as e:
            print(f"‚ö†Ô∏è Fact API error: {e}")
            if language == "uk":
                fact = random.choice(self.ukrainian_facts)
                return True, fact
            elif language == "de":
                return False, "‚ùå Fehler beim Abrufen der Fakten"
            else:
                return False, "‚ùå Error fetching fact"

    def get_random_fun(self, language: str = "uk") -> Tuple[bool, str]:
        """–í–∏–ø–∞–¥–∫–æ–≤–æ –æ–±–∏—Ä–∞—î –∂–∞—Ä—Ç –∞–±–æ —Ñ–∞–∫—Ç"""
        if random.choice([True, False]):
            return self.get_joke(language)
        else:
            return self.get_fact(language)


# –ì–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
fun_manager = FunManager()