"""
–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ OpenWeatherMap –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏
"""

from typing import Optional, Tuple
import requests


class WeatherManager:
    """–ö–µ—Ä—É–≤–∞–Ω–Ω—è –ø–æ–≥–æ–¥–æ—é —á–µ—Ä–µ–∑ OpenWeatherMap API"""

    def __init__(self, api_key: Optional[str] = None):
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–ª—é—á –∑ config
        if not api_key:
            from config import get_settings
            settings = get_settings()
            api_key = settings.openweather_api_key
        
        self.api_key = api_key
        self.base_url = "http://api.openweathermap.org/data/2.5/weather"

    def get_weather(self, city: str, language: str = "uk") -> Tuple[bool, str]:
        """
        –û—Ç—Ä–∏–º—É—î –ø–æ–≥–æ–¥—É –¥–ª—è –º—ñ—Å—Ç–∞
        
        Args:
            city: –ù–∞–∑–≤–∞ –º—ñ—Å—Ç–∞
            language: –ú–æ–≤–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ (uk, en, de)
        
        Returns:
            (success, message)
        """
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ API –∫–ª—é—á–∞
        if not self.api_key:
            if language == "uk":
                return False, "‚ùå API –∫–ª—é—á OpenWeatherMap –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π. –î–æ–¥–∞–π OPENWEATHER_API_KEY –≤ .env —Ñ–∞–π–ª"
            elif language == "de":
                return False, "‚ùå OpenWeatherMap API-Schl√ºssel nicht konfiguriert. F√ºgen Sie OPENWEATHER_API_KEY zur .env-Datei hinzu"
            else:
                return False, "‚ùå OpenWeatherMap API key not configured. Add OPENWEATHER_API_KEY to .env file"
        
        try:
            # –ü–µ—Ä–µ–∫–ª–∞–¥ –º–æ–≤–∏ –¥–ª—è API
            api_lang = language
            if language == "uk":
                api_lang = "ua"
            
            params = {
                "q": city,
                "appid": self.api_key,
                "units": "metric",  # –¶–µ–ª—å—Å—ñ–π
                "lang": api_lang
            }
            
            response = requests.get(self.base_url, params=params, timeout=10)
            
            if response.status_code == 404:
                if language == "uk":
                    return False, f"‚ùå –ú—ñ—Å—Ç–æ '{city}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
                elif language == "de":
                    return False, f"‚ùå Stadt '{city}' nicht gefunden"
                else:
                    return False, f"‚ùå City '{city}' not found"
            
            if response.status_code == 401:
                if language == "uk":
                    return False, "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π API –∫–ª—é—á OpenWeatherMap"
                elif language == "de":
                    return False, "‚ùå Ung√ºltiger OpenWeatherMap API-Schl√ºssel"
                else:
                    return False, "‚ùå Invalid OpenWeatherMap API key"
            
            response.raise_for_status()
            data = response.json()
            
            # –ü–∞—Ä—Å–∏–º–æ –¥–∞–Ω—ñ
            temp = round(data['main']['temp'])
            feels_like = round(data['main']['feels_like'])
            humidity = data['main']['humidity']
            description = data['weather'][0]['description']
            wind_speed = round(data['wind']['speed'])
            
            # –§–æ—Ä–º–∞—Ç—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            if language == "uk":
                message = (
                    f"üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
                    f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫ {feels_like}¬∞C)\n"
                    f"‚òÅÔ∏è {description.capitalize()}\n"
                    f"üíß –í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity}%\n"
                    f"üí® –í—ñ—Ç–µ—Ä: {wind_speed} –º/—Å"
                )
            elif language == "de":
                message = (
                    f"üå§Ô∏è Wetter in {city}:\n"
                    f"üå°Ô∏è Temperatur: {temp}¬∞C (f√ºhlt sich an wie {feels_like}¬∞C)\n"
                    f"‚òÅÔ∏è {description.capitalize()}\n"
                    f"üíß Luftfeuchtigkeit: {humidity}%\n"
                    f"üí® Wind: {wind_speed} m/s"
                )
            else:  # en
                message = (
                    f"üå§Ô∏è Weather in {city}:\n"
                    f"üå°Ô∏è Temperature: {temp}¬∞C (feels like {feels_like}¬∞C)\n"
                    f"‚òÅÔ∏è {description.capitalize()}\n"
                    f"üíß Humidity: {humidity}%\n"
                    f"üí® Wind: {wind_speed} m/s"
                )
            
            return True, message
            
        except requests.exceptions.Timeout:
            if language == "uk":
                return False, "‚ùå –ß–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –º–∏–Ω—É–≤. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ"
            elif language == "de":
                return False, "‚ùå Zeit√ºberschreitung. Versuche es sp√§ter"
            else:
                return False, "‚ùå Request timeout. Try later"
        except requests.exceptions.RequestException as e:
            print(f"‚ùå Weather API error: {e}")
            if language == "uk":
                return False, "‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏"
            elif language == "de":
                return False, "‚ùå Fehler beim Abrufen des Wetters"
            else:
                return False, "‚ùå Error fetching weather"
        except (KeyError, ValueError) as e:
            print(f"‚ùå Weather parsing error: {e}")
            if language == "uk":
                return False, "‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö –ø–æ–≥–æ–¥–∏"
            elif language == "de":
                return False, "‚ùå Fehler bei der Verarbeitung von Wetterdaten"
            else:
                return False, "‚ùå Error parsing weather data"


# –ì–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
weather_manager = WeatherManager()

