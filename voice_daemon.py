"""
Daemon —è–∫–∏–π –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –Ω–∞ Raspberry Pi
–°–ª—É—Ö–∞—î wake word ‚Üí –∑–∞–ø–∏—Å—É—î –∫–æ–º–∞–Ω–¥—É ‚Üí —Ä–æ–∑–ø—ñ–∑–Ω–∞—î ‚Üí –≤–∏–∫–æ–Ω—É—î ‚Üí –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î
"""

import time
from core.wake_word import WakeWordDetector
from hardware.led_controller import led_controller
from core.audio_manager import AudioManager
from voice.stt import transcribe_audio
from core.tts import text_to_speech
from storage.database import SessionLocal
from storage.models import User


class VoiceDaemon:
    def __init__(self, telegram_user_id: int):
        self.user_id = telegram_user_id
        self.wake_word = WakeWordDetector()
        self.audio = AudioManager()
        self.is_running = False
        self.language = "uk"
        self.personality = None
        
    def load_user_settings(self):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ –ë–î"""
        db = SessionLocal()
        try:
            user = db.query(User).filter(
                User.telegram_user_id == self.user_id
            ).first()
        finally:
            db.close()
        
        if user:
            self.language = user.language
            self.personality = user.personality_prompt
            return True
        return False
        
    def start(self, listen_immediately: bool = False):
        """–ó–∞–ø—É—Å–∫–∞—î daemon

        Args:
            listen_immediately: –Ø–∫—â–æ True ‚Äî –æ–¥—Ä–∞–∑—É –∑–∞–ø–∏—Å–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É –±–µ–∑ wake word
        """
        if not self.load_user_settings():
            print("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
            return
            
        self.is_running = True
        print(f"‚úÖ Daemon –∑–∞–ø—É—â–µ–Ω–æ (–º–æ–≤–∞: {self.language})")
        
        while self.is_running:
            # –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–¥—Ä–∞–∑—É —Å–ª—É—Ö–∞—Ç–∏ ‚Äî –æ–¥–∏–Ω —Ä–∞–∑ –≤–∏–∫–æ–Ω—É—î–º–æ –∫–æ–º–∞–Ω–¥—É
            if listen_immediately:
                try:
                    led_controller.start_listening()
                except Exception:
                    pass
                self.handle_command()
                listen_immediately = False
                continue

            # –ó–≤–∏—á–∞–π–Ω–∏–π —Ä–µ–∂–∏–º: —á–µ–∫–∞—î–º–æ wake word
            if self.wake_word.listen():
                print("üé§ Wake word detected!")
                try:
                    led_controller.start_listening()
                except Exception:
                    pass
                self.handle_command()
                
    def handle_command(self):
        """–û–±—Ä–æ–±–ª—è—î –≥–æ–ª–æ—Å–æ–≤—É –∫–æ–º–∞–Ω–¥—É"""
        # 1. –°–∏–≥–Ω–∞–ª —â–æ —Å–ª—É—Ö–∞—î–º–æ
        print("üëÇ –°–ª—É—Ö–∞—é –∫–æ–º–∞–Ω–¥—É...")
        
        # 2. –ó–∞–ø–∏—Å—É—î–º–æ –∞—É–¥—ñ–æ
        audio_data = self.audio.record_until_silence()
        
        # 3. –†–æ–∑–ø—ñ–∑–Ω–∞—î–º–æ (STT)
        command = transcribe_audio(self.user_id, audio_data)
        print(f"üìù –†–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ: {command}")
        
        # 4. –û–±—Ä–æ–±–ª—è—î–º–æ –∫–æ–º–∞–Ω–¥—É
        try:
            led_controller.start_thinking()
        except Exception:
            pass
        response = self.process_command(command)
        
        # 5. –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –≥–æ–ª–æ—Å–æ–º (TTS)
        audio_response = text_to_speech(
            self.user_id, 
            response, 
            self.language
        )
        try:
            led_controller.start_speaking()
        except Exception:
            pass
        self.audio.play_audio(audio_response)
        try:
            led_controller.blink_success()
        except Exception:
            pass
        
    def process_command(self, command: str) -> str:
        """
        –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ç–µ–∫—Å—Ç–æ–≤—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å
        
        TODO: –¢—É—Ç –±—É–¥–µ –ª–æ–≥—ñ–∫–∞ –¥–ª—è:
        - Spotify ("–≥—Ä–∞–π –º—É–∑–∏–∫—É")
        - Calendar ("—è–∫—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ —Å—å–æ–≥–æ–¥–Ω—ñ")
        - –ó–∞–≥–∞–ª—å–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è (—á–µ—Ä–µ–∑ OpenAI chat)
        """
        # –ü–æ–∫–∏ –∑–∞–≥–ª—É—à–∫–∞
        return f"–í–∏ —Å–∫–∞–∑–∞–ª–∏: {command}"
        
    def stop(self):
        """–ó—É–ø–∏–Ω—è—î daemon"""
        self.is_running = False
        self.wake_word.stop()
        try:
            led_controller.stop_animation()
            led_controller.turn_off()
        except Exception:
            pass
        print("üõë Daemon –∑—É–ø–∏–Ω–µ–Ω–æ")


if __name__ == "__main__":
    # –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø—É—Å–∫
    # TODO: –í–∑—è—Ç–∏ telegram_user_id –∑ —è–∫–æ–≥–æ—Å—å –∫–æ–Ω—Ñ—ñ–≥–∞
    daemon = VoiceDaemon(telegram_user_id=123456789)
    daemon.start()


