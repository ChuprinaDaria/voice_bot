from __future__ import annotations

from telegram import ReplyKeyboardMarkup, KeyboardButton


def main_menu_keyboard(language: str = "uk") -> ReplyKeyboardMarkup:
    """–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"""
    if language == "uk":
        buttons = [
            [KeyboardButton(text="üéôÔ∏è –ü–æ—á–∞—Ç–∏ —Ä–æ–∑–º–æ–≤—É"), KeyboardButton(text="‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")],
            [KeyboardButton(text="üéµ –ö–µ—Ä—É–≤–∞–Ω–Ω—è –º—É–∑–∏–∫–æ—é"), KeyboardButton(text="‚è∞ –¢–∞–π–º–µ—Ä")],
            [KeyboardButton(text="üìú –Ü—Å—Ç–æ—Ä—ñ—è"), KeyboardButton(text="üé≤ –†–æ–∑–≤–∞–∂–∏—Ç–∏ –º–µ–Ω–µ")],
            [KeyboardButton(text="üîÑ –ü–µ—Ä–µ–º–∫–Ω—É—Ç–∏ —Ä–µ–∂–∏–º"), KeyboardButton(text="üé§ –£–≤—ñ–º–∫–Ω—É—Ç–∏ –≥–æ–ª–æ—Å")],
        ]
    elif language == "de":
        buttons = [
            [KeyboardButton(text="üéôÔ∏è Gespr√§ch starten"), KeyboardButton(text="‚öôÔ∏è Einstellungen")],
            [KeyboardButton(text="üéµ Musiksteuerung"), KeyboardButton(text="‚è∞ Timer")],
            [KeyboardButton(text="üìú Verlauf"), KeyboardButton(text="üé≤ Unterhaltung")],
            [KeyboardButton(text="üîÑ Modus wechseln"), KeyboardButton(text="üé§ Stimme aktivieren")],
        ]
    else:  # en
        buttons = [
            [KeyboardButton(text="üéôÔ∏è Start conversation"), KeyboardButton(text="‚öôÔ∏è Settings")],
            [KeyboardButton(text="üéµ Music Control"), KeyboardButton(text="‚è∞ Timer")],
            [KeyboardButton(text="üìú History"), KeyboardButton(text="üé≤ Entertain me")],
            [KeyboardButton(text="üîÑ Switch mode"), KeyboardButton(text="üé§ Enable Voice")],
        ]
    return ReplyKeyboardMarkup(buttons, resize_keyboard=True)


def setup_menu_keyboard(language: str = "uk") -> ReplyKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å"""
    if language == "uk":
        keyboard = [
            ["üåê –í–∏–±—Ä–∞—Ç–∏ –º–æ–≤—É"],
            ["üîë API –ö–ª—é—á—ñ"],
            ["üó£Ô∏è –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å"],
            ["üé§ –ì–æ–ª–æ—Å–æ–≤–∏–π —Ä–µ–∂–∏–º"],
            ["‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"],
        ]
    elif language == "de":
        keyboard = [
            ["üåê Sprache w√§hlen"],
            ["üîë API-Schl√ºsselverwaltung"],
            ["üó£Ô∏è Pers√∂nlichkeit einrichten"],
            ["üé§ Sprachsteuerung"],
            ["‚úÖ Einrichtung abschlie√üen"],
        ]
    else:  # en
        keyboard = [
            ["üåê Choose Language"],
            ["üîë API Keys"],
            ["üó£Ô∏è Setup Personality"],
            ["üé§ Voice Control"],
            ["‚úÖ Finish Setup"],
        ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


def api_keys_keyboard(language: str = "uk") -> ReplyKeyboardMarkup:
    """–ú–µ–Ω—é –∫–µ—Ä—É–≤–∞–Ω–Ω—è API –∫–ª—é—á–∞–º–∏ —Ç–∞ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è–º–∏"""
    if language == "uk":
        keyboard = [
            ["üîë OpenAI API Key"],
            ["üéµ –ú—É–∑–∏–∫–∞", "üìÖ Google Calendar"],
            ["üîô –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å"]
        ]
    elif language == "de":
        keyboard = [
            ["üîë OpenAI API Key"],
            ["üéµ Music", "üìÖ Google Calendar"],
            ["üîô Zur√ºck zu Einstellungen"]
        ]
    else:  # en
        keyboard = [
            ["üîë OpenAI API Key"],
            ["üéµ Music", "üìÖ Google Calendar"],
            ["üîô Back to Settings"]
        ]

    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


def language_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –≤–∏–±–æ—Ä—É –º–æ–≤–∏"""
    keyboard = [
        ["–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ (uk)", "English (en)"],
        ["Deutsch (de)"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


def voice_control_keyboard(language: str = "uk") -> ReplyKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –≥–æ–ª–æ—Å–æ–º"""
    if language == "uk":
        keyboard = [
            ["üé§ –£–≤—ñ–º–∫–Ω—É—Ç–∏ –≥–æ–ª–æ—Å", "üîá –í–∏–º–∫–Ω—É—Ç–∏ –≥–æ–ª–æ—Å"],
            ["üîô –ù–∞–∑–∞–¥ –¥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å"]
        ]
    elif language == "de":
        keyboard = [
            ["üé§ Stimme aktivieren", "üîá Stimme deaktivieren"],
            ["üîô Zur√ºck zu Einstellungen"]
        ]
    else:  # en
        keyboard = [
            ["üé§ Enable Voice", "üîá Disable Voice"],
            ["üîô Back to Settings"]
        ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


def music_control_keyboard(language: str = "uk") -> ReplyKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –º—É–∑–∏–∫–æ—é"""
    if language == "uk":
        keyboard = [
            ["‚è∏Ô∏è –ü–∞—É–∑–∞", "‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏"],
            ["‚è≠Ô∏è –ù–∞—Å—Ç—É–ø–Ω–∞", "‚èÆÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—è"],
            ["‚èπÔ∏è –ó—É–ø–∏–Ω–∏—Ç–∏ –º—É–∑–∏–∫—É"],
            ["üîô –ù–∞–∑–∞–¥"]
        ]
    elif language == "de":
        keyboard = [
            ["‚è∏Ô∏è Pause", "‚ñ∂Ô∏è Fortsetzen"],
            ["‚è≠Ô∏è N√§chste", "‚èÆÔ∏è Vorherige"],
            ["‚èπÔ∏è Musik stoppen"],
            ["üîô Zur√ºck"]
        ]
    else:  # en
        keyboard = [
            ["‚è∏Ô∏è Pause", "‚ñ∂Ô∏è Resume"],
            ["‚è≠Ô∏è Next", "‚èÆÔ∏è Previous"],
            ["‚èπÔ∏è Stop Music"],
            ["üîô Back"]
        ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
